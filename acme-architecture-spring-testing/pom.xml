<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.acme.architecture.testing.spring</groupId>
	<artifactId>acme-architecture-spring-testing</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>acme-architecture-spring-testing</name>
	<url>http://maven.apache.org</url>

	<properties>
		<!-- *** Important : Include properties in ~/.m2/settings.xml -->

		<!-- Compiler & Resources -->
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<!-- Architecture libraries -->
		<acme-architecture-testing.version>0.0.1-SNAPSHOT</acme-architecture-testing.version>
		
		<!-- Dependency Versions -->
		<spring-boot-starter-parent.version>2.3.4.RELEASE</spring-boot-starter-parent.version>

		<!-- Plugins -->
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
	</properties>

	<!-- <profiles> They are found definitively in in ~/.m2/settings.xml -->

	<dependencies>

		<!-- *** Architecture Libraries *** -->
		
		<!-- acme-architecture-testing : Custom Testing Library
			Include : 
				* spring-boot-starter-test
				* archunit + custom rules
		-->
		
		<dependency>
			<groupId>com.acme.architecture.testing</groupId>
			<artifactId>acme-architecture-testing</artifactId>
			<version>${acme-architecture-testing.version}</version>
		</dependency>
		
		<!-- *** Spring Boot Starters *** -->
		
		<!-- spring-boot-starter-web : Web Spring Famework for use Spring MVC with web / RESTful applications-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring-boot-starter-parent.version}</version>
		</dependency>
		
		<!-- spring-boot-starter-data-jpa : Data JPA Spring Famework -->
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>${spring-boot-starter-parent.version}</version>
		</dependency>

		<!-- *** Third Party Libraries *** -->

		
	</dependencies>

	<build>
		<finalName>acme-architecture-spring-testing</finalName>
		
		<plugins>
			
			<!-- maven-compiler-plugin : Plugin used to compile the project source -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- maven-resources-plugin : Plugin used to handle the project resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			
			<!-- maven-surefire-plugin : Plugin used to run unit tests - Generate reports in the directory target/surefire-reports -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<skipTests>${skip.unit.tests}</skipTests>
					<testFailureIgnore>true</testFailureIgnore>
					<properties>
						<configurationParameters>
							junit.jupiter.execution.parallel.enabled=true
							junit.jupiter.execution.parallel.config.dynamic.factor=2
							junit.platform.output.capture.stdout=true
							junit.platform.output.capture.stderr=true
						</configurationParameters>
					</properties>
				</configuration>
			</plugin>
			
			<!-- maven-surefire-report-plugin : Plugin used to generate test report in the repository target/site/ (default) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<outputDirectory>target/surefire-reports</outputDirectory>
					<linkXRef>false</linkXRef>
				</configuration>
				<executions>
					<execution>
						<id>generate-test-report</id>
						<phase>test</phase>
						<goals>
							<goal>report-only</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
